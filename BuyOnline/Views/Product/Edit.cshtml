@model BuyOnline.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-center page-header" style="background-color:black; color:white; padding:10px;">Edit the Product</h2>




@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>

        <div class="alert alert-danger" id="error-div" style="display:none;">
            <span id="error-view">

            </span>

        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.ProductImage)




        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (string.IsNullOrWhiteSpace(Model.ProductImage))
                {
                    <input type="file" name="upload" />
                }
                else
                {
                    <img src="~/Images/Products/@Html.DisplayFor(model => model.ProductImage)" style="width:60px; height:80px;" class="thumbnail" />
                    <input type="file" name="upload" id="myImage" />
                }
                @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back To Products", "AllProductsBySeller", null, new { @class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>

        $(function () {
            $("#save").click(function () {


                //// check if the input is Empty
                //if ($("#myImage").val() == "") {
                //    $("#error-div").fadeIn();
                //    $("#error-view").append("Please insert an image for this job");
                //    return false;
                //}



                // if the image is not null  then do the next codes
                if ($("#myImage").val() != "") {

                    // check if the image extension is valid
                    var fileName = document.getElementById("myImage").value;
                    var extensionImage = fileName.substr(fileName.lastIndexOf(".") + 1);
                    var valiExtension = ['jpg', 'png', 'gif', 'bmp', 'jpeg', 'svg'];
                    if ($.inArray(extensionImage, valiExtension) == -1) {
                        $("#error-div").fadeIn();
                        $("#error-view").append("Please insert an image with a correct extension ");
                        return false;
                    }




                    // check if the image size is valid
                    var myFileSize = document.getElementById("myImage").files[0].size / 1024 / 1024;
                    if (myFileSize > 2) {
                        $("#error-div").fadeIn();
                        $("#error-view").append("The size of image is big , please insert an image less than 2 Mega byte ");
                        return false;
                    }



                }
            });
        });


    </script>
}